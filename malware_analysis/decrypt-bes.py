import os
import time

# getting names of the files which ends with .24bes
def get_files(directory):
    return [file for file in os.listdir(directory) if file.endswith('.24bes')]

def decrypt(path, file_name):
    key = 'bhUlIshutrea98liOp'
    key_len = len(key)
    file_content = bytearray() # for storing the decrypted data

    # crating a new folder which will contain the decrypted files
    decrypt_folder = os.path.join(path, 'decryted_files')
    try:
        os.makedirs(decrypt_folder)
    except FileExistsError:
        pass

    # constructing the full path for files before and after decryption, the -6 removes the .24bes from end of file
    file_before_decrypt = os.path.join(path, file_name)
    file_after_decrypt = os.path.join(decrypt_folder, file_name[:-6])

    # open the file and read the content of the file
    try:
        with open(file_before_decrypt, 'rb') as fb:
            data = fb.read()
    except FileNotFoundError:
        print(f"[-] File does not exist: {file_before_decrypt}")
        return

    # decryption logic
    for i, v in enumerate(data):
        file_content.append(v ^ ord(key[i % key_len]))

    with open(file_after_decrypt, 'wb') as fw:
        fw.write(file_content)
    print(f"Decryption complete: {file_after_decrypt}")


path = '/home/kali/ctf/forela-criticaldata'
files = get_files(path)
file_len = len(files)

if file_len == 0:
    print("No .24bes files in given directory")
else:
    for i, file in enumerate(files, start=1):
        decrypt(path, file)
        print(f'\r[+] {i/file_len:.0%}', end='')
        time.sleep(0.5)
print("\n Decryption Complete.")
